@model ViewModel
@if (!Model.IsDummyPage)
{
    <div class="container-fluid asposetools pb5">
        <div class="container">
            <div class="row">
                <div class="col-md-12 pt-5 pb-5" style="min-height:450px">

                    <h1 id="ProductTitle">@Model.Title</h1>
                    <h2 id="ProductTitleSub">@Model.TitleSub</h2>

                    <div id="WorkPlaceHolder">
                        <form id="UploadFile" name="UploadFile" method="POST" enctype="multipart/form-data">
                            @* Now this block is generated in filedrop.js
                                <div class="filedrop filedrop-mvc fileplacement" id="filedrop">
                                    <label for="UploadFileInput" style="margin-top: 50px; text-decoration: underline">@Html.Raw(Model.Resources["DropOrUploadFiles"])</label>
                                    <input type="file" class="uploadfileinput" id="UploadFileInput" name="UploadFileInput"
                                           accept="@Model.ExtensionsString.Replace("|.", ",.")"
                                           multiple="!@Model.UploadAndRedirect.ToString().ToLower()" />
                                </div>
                            *@
                            @if (!string.IsNullOrEmpty(Model.ControlsView))
                            {
                                @await Html.PartialAsync(Model.ControlsView)
                            }

                            @if (!Model.UploadAndRedirect || Model.NeedsProcessButton)
                            {
                                <div class="col-md-12">
                                    @if (Model.SaveAsOptions != null)
                                    {
                                        @await Html.PartialAsync("Email/SaveAs")
                                    }
                                    <div class="convertbtn">
                                        <input type="button" class="btn btn-success btn-lg" ID="uploadButton" value="@Model.UploadButtonText" />
                                    </div>
                                </div>
                            }
                        </form>
                    </div>
                    @if (!Model.UploadAndRedirect || Model.NeedsDownloadForm)
                    {
                        @await Html.PartialAsync("Email/Download")
                    }
                    <div id="alertPlaceHolder" class="col-md-12">
                        <br />
                        <p id="alertMessage" class="alert alert-danger hidden"></p>
                        <p id="alertSuccess" class="alert alert-success hidden"></p>
                    </div>

                    <div id="loaderPlaceHolder">
                        <div id="loader" class="hidden" role="status" aria-hidden="true">
                            <div class="progress">
                                <div class="progress-bar progress-bar-success progress-bar-striped active" role="progressbar" style="width: 15%">15%</div>
                            </div>
                        </div>
                    </div>
                </div>

                <p style="font-size: small">By uploading your files or using our service you agree with our <a target="_blank" style="color: #8ad2ff !important; text-decoration: underline !important" rel="nofollow" href="https://about.Aspose.Email.Live.Demos.UI/legal/tos">Terms of Service</a> and <a target="_blank" style="color: #8ad2ff !important; text-decoration: underline !important" rel="nofollow" href="https://about.Aspose.Email.Live.Demos.UI/legal/privacy-policy">Privacy Policy</a>.</p>
            </div>
        </div>
    </div>
}
else
{
    <div class="container-fluid asposetools pb5">
        <div class="container">
            <div class="row">
                @*<div class="col-md-12 pt-5 pb-5">*@
                <h1 id="ProductTitle">@Model.Title</h1>
                <h2 id="ProductTitleSub">@Model.TitleSub</h2>
                @*</div>*@
            </div>
        </div>
    </div>
}

@await Html.PartialAsync("Email/OtherAppsPanel")

